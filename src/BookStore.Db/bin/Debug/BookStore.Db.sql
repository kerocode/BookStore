/*
Deployment script for BookStore.Db

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BookStore.Db"
:setvar DefaultFilePrefix "BookStore.Db"
:setvar DefaultDataPath "C:\Users\keroles.hakem\AppData\Local\Microsoft\VisualStudio\SSDT\BookStore"
:setvar DefaultLogPath "C:\Users\keroles.hakem\AppData\Local\Microsoft\VisualStudio\SSDT\BookStore"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key f05fbea6-1759-4404-b5dc-233bc65dc545 is skipped, element [dbo].[Book].[Id] (SqlSimpleColumn) will not be renamed to BookId';


GO
PRINT N'Creating [dbo].[Author]...';


GO
CREATE TABLE [dbo].[Author] (
    [AuthorId]  BIGINT         IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (100) NOT NULL,
    [LastName]  NVARCHAR (100) NOT NULL,
    [BookId]    BIGINT         NOT NULL,
    [ts]        ROWVERSION     NOT NULL,
    PRIMARY KEY CLUSTERED ([AuthorId] ASC)
);


GO
PRINT N'Creating [dbo].[Book]...';


GO
CREATE TABLE [dbo].[Book] (
    [BookId]      BIGINT         IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (100) NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    [PublishData] DATETIME2 (7)  NOT NULL,
    [CreatedAt]   DATETIME2 (7)  NOT NULL,
    [Price]       MONEY          NOT NULL,
    [IsEnabled]   BIT            NOT NULL,
    [ts]          ROWVERSION     NOT NULL,
    PRIMARY KEY CLUSTERED ([BookId] ASC)
);


GO
PRINT N'Creating [dbo].[Category]...';


GO
CREATE TABLE [dbo].[Category] (
    [CategoryId]  BIGINT         IDENTITY (1, 1) NOT NULL,
    [BookId]      BIGINT         NOT NULL,
    [Name]        NVARCHAR (50)  NULL,
    [Description] NVARCHAR (MAX) NULL,
    [ts]          ROWVERSION     NOT NULL,
    PRIMARY KEY CLUSTERED ([CategoryId] ASC)
);


GO
PRINT N'Creating [dbo].[Discount]...';


GO
CREATE TABLE [dbo].[Discount] (
    [DiscountId]  BIGINT         IDENTITY (1, 1) NOT NULL,
    [BookId]      BIGINT         NOT NULL,
    [Name]        NVARCHAR (100) NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    [Percentage]  DECIMAL (18)   NOT NULL,
    [ValidUntil]  DATETIME2 (7)  NOT NULL,
    [CreatedAt]   DATETIME2 (7)  NOT NULL,
    [UpdatedAt]   DATETIME2 (7)  NOT NULL,
    [IsEnabled]   BIT            NOT NULL,
    [ts]          ROWVERSION     NOT NULL,
    PRIMARY KEY CLUSTERED ([DiscountId] ASC)
);


GO
PRINT N'Creating [dbo].[Order]...';


GO
CREATE TABLE [dbo].[Order] (
    [OrderId]     BIGINT        IDENTITY (1, 1) NOT NULL,
    [OrderItemId] BIGINT        NOT NULL,
    [Quantity]    INT           NOT NULL,
    [OrderDate]   DATETIME2 (7) NOT NULL,
    [Total]       MONEY         NOT NULL,
    [ts]          ROWVERSION    NOT NULL,
    PRIMARY KEY CLUSTERED ([OrderId] ASC)
);


GO
PRINT N'Creating [dbo].[OrderItem]...';


GO
CREATE TABLE [dbo].[OrderItem] (
    [OrderItemId] BIGINT     IDENTITY (1, 1) NOT NULL,
    [UserId]      BIGINT     NOT NULL,
    [OrderId]     BIGINT     NOT NULL,
    [BookId]      BIGINT     NOT NULL,
    [Quantity]    INT        NOT NULL,
    [Price]       MONEY      NOT NULL,
    [ts]          ROWVERSION NOT NULL,
    PRIMARY KEY CLUSTERED ([OrderItemId] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [UserId]    BIGINT        IDENTITY (1, 1) NOT NULL,
    [Firstname] NVARCHAR (50) NOT NULL,
    [Lastname]  NVARCHAR (50) NOT NULL,
    [Username]  NVARCHAR (50) NOT NULL,
    [Email]     NVARCHAR (50) NOT NULL,
    [Password]  VARCHAR (225) NOT NULL,
    [CreatedAt] DATETIME2 (7) NOT NULL,
    [UpdatedAt] DATETIME2 (7) NOT NULL,
    [IsEnabled] BIT           NOT NULL,
    [ts]        ROWVERSION    NOT NULL,
    CONSTRAINT [PK_User] PRIMARY KEY CLUSTERED ([UserId] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Author]...';


GO
ALTER TABLE [dbo].[Author] WITH NOCHECK
    ADD FOREIGN KEY ([BookId]) REFERENCES [dbo].[Book] ([BookId]);


GO
PRINT N'Creating [dbo].[FK_Category_BookId]...';


GO
ALTER TABLE [dbo].[Category] WITH NOCHECK
    ADD CONSTRAINT [FK_Category_BookId] FOREIGN KEY ([BookId]) REFERENCES [dbo].[Book] ([BookId]);


GO
PRINT N'Creating [dbo].[FK_Order_BookId]...';


GO
ALTER TABLE [dbo].[Discount] WITH NOCHECK
    ADD CONSTRAINT [FK_Order_BookId] FOREIGN KEY ([BookId]) REFERENCES [dbo].[Book] ([BookId]);


GO
PRINT N'Creating [dbo].[FK_Order_OrderItemId]...';


GO
ALTER TABLE [dbo].[Order] WITH NOCHECK
    ADD CONSTRAINT [FK_Order_OrderItemId] FOREIGN KEY ([OrderItemId]) REFERENCES [dbo].[OrderItem] ([OrderItemId]);


GO
PRINT N'Creating [dbo].[FK_Order_UserId]...';


GO
ALTER TABLE [dbo].[OrderItem] WITH NOCHECK
    ADD CONSTRAINT [FK_Order_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([UserId]);


GO
PRINT N'Creating unnamed constraint on [dbo].[OrderItem]...';


GO
ALTER TABLE [dbo].[OrderItem] WITH NOCHECK
    ADD FOREIGN KEY ([OrderId]) REFERENCES [dbo].[Order] ([OrderId]);


GO
PRINT N'Creating unnamed constraint on [dbo].[OrderItem]...';


GO
ALTER TABLE [dbo].[OrderItem] WITH NOCHECK
    ADD FOREIGN KEY ([BookId]) REFERENCES [dbo].[Book] ([BookId]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f05fbea6-1759-4404-b5dc-233bc65dc545')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f05fbea6-1759-4404-b5dc-233bc65dc545')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Category] WITH CHECK CHECK CONSTRAINT [FK_Category_BookId];

ALTER TABLE [dbo].[Discount] WITH CHECK CHECK CONSTRAINT [FK_Order_BookId];

ALTER TABLE [dbo].[Order] WITH CHECK CHECK CONSTRAINT [FK_Order_OrderItemId];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Author'), OBJECT_ID(N'dbo.OrderItem'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
